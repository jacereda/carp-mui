(relative-include "microui/src/microui.h")
(relative-include "microui/src/microui.c")
(register-type Context "mu_Context")
(register-type Rect "mu_Rect")
(register-type Font "mu_Font")
(register-type Color "mu_Color")
(defmodule mu
  (deftemplate context
    (λ [] (Ptr Context))
    "#define mu_context() memset(alloca(sizeof(mu_Context)), 0, sizeof(mu_Context))"
    "")
  (register vec2 (λ [Int Int] mu_Vec2))
  (register rect (λ [Int Int Int Int] Rect))
  (register color (λ [Int Int Int Int] Color))
  (register init (λ [(Ptr Context)] ()))
  (register begin (λ [(Ptr Context)] ()))
  (register end (λ [(Ptr Context)] ()))
  (register set_focus (λ [(Ptr Context) mu_Id] ()))
  (register get_id (λ [(Ptr Context) (Ptr ()) Int] mu_Id))
  (register push_id (λ [(Ptr Context) (Ptr ()) Int] ()))
  (register pop_id (λ [(Ptr Context)] ()))
  (register push_clip_rect (λ [(Ptr Context) Rect] ()))
  (register pop_clip_rect (λ [(Ptr Context)] ()))
  (register get_clip_rect (λ [(Ptr Context)] Rect))
  (register check_clip (λ [(Ptr Context) Rect] Int))
  (register get_current_container (λ [(Ptr Context)] (Ptr mu_Container)))
  (register get_container (λ [(Ptr Context) (Ptr CChar)] (Ptr mu_Container)))
  (register bring_to_front (λ [(Ptr Context) (Ptr mu_Container)] ()))
  (register pool_init (λ [(Ptr Context) (Ptr mu_PoolItem) Int mu_Id] Int))
  (register pool_get (λ [(Ptr Context) (Ptr mu_PoolItem) Int mu_Id] Int))
  (register pool_update (λ [(Ptr Context) (Ptr mu_PoolItem) Int] ()))
  (register input_mousemove (λ [(Ptr Context) Int Int] ()))
  (register input_mousedown (λ [(Ptr Context) Int Int Int] ()))
  (register input_mouseup (λ [(Ptr Context) Int Int Int] ()))
  (register input_scroll (λ [(Ptr Context) Int Int] ()))
  (register input_keydown (λ [(Ptr Context) Int] ()))
  (register input_keyup (λ [(Ptr Context) Int] ()))
  (register input_text (λ [(Ptr Context) (Ptr CsChar)] ()))
  (register push_command (λ [(Ptr Context) Int Int] (Ptr mu_Command)))
  (register next_command (λ [(Ptr Context) (Ptr (Ptr mu_Command))] Int))
  (register set_clip (λ [(Ptr Context) Rect] ()))
  (register draw_rect (λ [(Ptr Context) Rect Color] ()))
  (register draw_box (λ [(Ptr Context) Rect Color] ()))
  (register draw_text (λ [(Ptr Context) Font (Ptr CChar) Int mu_Vec2 Color] ()))
  (register draw_icon (λ [(Ptr Context) Int Rect Color] ()))
  (register layout_row (λ [(Ptr Context) Int (Ptr Int) Int] ()))
  (register layout_width (λ [(Ptr Context) Int] ()))
  (register layout_height (λ [(Ptr Context) Int] ()))
  (register layout_begin_column (λ [(Ptr Context)] ()))
  (register layout_end_column (λ [(Ptr Context)] ()))
  (register layout_set_next (λ [(Ptr Context) Rect Int] ()))
  (register layout_next (λ [(Ptr Context)] Rect))
  (register draw_control_frame (λ [(Ptr Context) mu_Id Rect Int Int] ()))
  (register draw_control_text (λ [(Ptr Context) (Ptr CChar) Rect Int Int] ()))
  (register mouse_over (λ [(Ptr Context) Rect] Int))
  (register update_control (λ [(Ptr Context) mu_Id Rect Int] ()))
  (register button (λ [(Ptr Context) (Ptr CChar)] Int))
  (register textbox (λ [(Ptr Context) (Ptr CChar) Int] Int))
  (register slider (λ [(Ptr Context) (Ptr Float)  Float Float] Int))
  (register number (λ [(Ptr Context) (Ptr Float) Float] Int))
  (register header (λ [(Ptr Context) (Ptr CChar)] Int))
  (register begin_treenode (λ [(Ptr Context) (Ptr CChar)] Int))
  (register begin_window (λ [(Ptr Context) (Ptr CChar) Rect] Int))
  (register begin_panel (λ [(Ptr Context) (Ptr CChar)] ()))
  (register text (λ [(Ptr Context) (Ptr CChar)] ()))
  (register label (λ [(Ptr Context) (Ptr CChar)] ()))
  (register button_ex (λ [(Ptr Context) (Ptr CChar) Int Int] Int))
  (register checkbox (λ [(Ptr Context) (Ptr CChar) (Ptr Int)] Int))
  (register textbox_ex (λ [(Ptr Context) (Ptr CChar) Int Int] Int))
  (register slider_ex (λ [(Ptr Context) (Ptr Float) Float Float Float (Ptr CChar) Int] Int))
  (register number_ex (λ [(Ptr Context) (Ptr Float) Float (Ptr CChar) Int] Int))
  (register header_ex (λ [(Ptr Context) (Ptr CChar) Int] Int))
  (register begin_treenode_ex (λ [(Ptr Context) (Ptr CChar) Int] Int))
  (register end_treenode (λ [(Ptr Context)] ()))
  (register begin_window_ex (λ [(Ptr Context) (Ptr CChar) Rect Int] Int))
  (register end_window (λ [(Ptr Context)] ()))
  (register open_popup (λ [(Ptr Context) (Ptr CChar)] ()))
  (register begin_popup (λ [(Ptr Context) (Ptr CChar)] Int))
  (register end_popup (λ [(Ptr Context)] ()))
  (register begin_panel_ex (λ [(Ptr Context) (Ptr CChar) Int] ()))
  (register end_panel (λ [(Ptr Context)] ()))
  )
